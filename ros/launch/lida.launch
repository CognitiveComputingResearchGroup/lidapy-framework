<launch>
    <node name="action_selection" pkg="example_package" type="agent_starter.py" required="true" args="-m ActionSelection -f $(find example_project)/configs/agent.conf"/>
    <node name="conscious_contents_queue" pkg="example_package" type="agent_starter.py" required="true" args="-m ConsciousContentsQueue -f $(find example_project)/configs/agent.conf"/>
    <node name="current_situational_model" pkg="example_package" type="agent_starter.py" required="true" args="-m CurrentSituationalModel -f $(find example_project)/configs/agent.conf"/>
    <node name="global_workspace" pkg="example_package" type="agent_starter.py" required="true" args="-m GlobalWorkspace -f $(find example_project)/configs/agent.conf"/>
    <node name="perceptual_associative_memory" pkg="example_package" type="agent_starter.py" required="true" args="-m PerceptualAssociativeMemory -f $(find example_project)/configs/agent.conf"/>
    <node name="procedural_memory" pkg="example_package" type="agent_starter.py" required="true" args="-m ProceduralMemory -f $(find example_project)/configs/agent.conf"/>
    <node name="sensory_memory" pkg="example_package" type="agent_starter.py" required="true" args="-m SensoryMemory -f $(find example_project)/configs/agent.conf"/>
    <node name="sensory_motor_memory" pkg="example_package" type="agent_starter.py" required="true" args="-m SensoryMotorMemory -f $(find example_project)/configs/agent.conf"/>
    <node name="workspace" pkg="example_package" type="agent_starter.py" required="true" args="-m Workspace -f $(find example_project)/configs/agent.conf"/>
</launch>
